diff --git a/patches/add-gnukfreebsd-to-gyp-GetFlavor.patch b/patches/add-gnukfreebsd-to-gyp-GetFlavor.patch
new file mode 100644
index 0000000..7034497
--- /dev/null
+++ b/patches/add-gnukfreebsd-to-gyp-GetFlavor.patch
@@ -0,0 +1,13 @@
+diff --git a/build/gyp/pylib/gyp/common.py b/build/gyp/pylib/gyp/common.py
+index 4f2ae56..103f2d8 100644
+--- a/build/gyp/pylib/gyp/common.py
++++ b/build/gyp/pylib/gyp/common.py
+@@ -378,6 +378,8 @@ def GetFlavor(params):
+     return 'solaris'
+   if sys.platform.startswith('freebsd'):
+     return 'freebsd'
++  if sys.platform.startswith('gnukfreebsd'):
++    return 'freebsd'
+ 
+   return 'linux'
+ 
diff --git a/patches/fix-WAITID-availability-check.patch b/patches/fix-WAITID-availability-check.patch
new file mode 100644
index 0000000..aa3393c
--- /dev/null
+++ b/patches/fix-WAITID-availability-check.patch
@@ -0,0 +1,13 @@
+diff --git a/src/d8-posix.cc b/src/d8-posix.cc
+index 8a278e4..4b34d40 100644
+--- a/src/d8-posix.cc
++++ b/src/d8-posix.cc
+@@ -366,7 +366,7 @@ static Handle<Value> GetStdout(int child_fd,
+ // We're disabling usage of waitid in Mac OS X because it doens't work for us:
+ // a parent process hangs on waiting while a child process is already a zombie.
+ // See http://code.google.com/p/v8/issues/detail?id=401.
+-#if defined(WNOWAIT) && !defined(ANDROID) && !defined(__APPLE__) \
++#if defined(WNOWAIT) && defined(WEXITED) && defined(WNOHANG) && !defined(ANDROID) && !defined(__APPLE__) \
+     && !defined(__NetBSD__)
+ #if !defined(__FreeBSD__)
+ #define HAS_WAITID 1
diff --git a/patches/remove-execinfo-from-library-dependencies-for-freebsd.patch b/patches/remove-execinfo-from-library-dependencies-for-freebsd.patch
new file mode 100644
index 0000000..c8152e8
--- /dev/null
+++ b/patches/remove-execinfo-from-library-dependencies-for-freebsd.patch
@@ -0,0 +1,56 @@
+diff --git a/SConstruct b/SConstruct
+index 21d1902..0baf42d 100644
+--- a/SConstruct
++++ b/SConstruct
+@@ -106,9 +106,7 @@ LIBRARY_FLAGS = {
+     },
+     'os:freebsd': {
+       'CPPPATH' : [src_dir, '/usr/local/include'],
+-      'LIBPATH' : ['/usr/local/lib'],
+       'CCFLAGS':      ['-ansi'],
+-      'LIBS': ['execinfo']
+     },
+     'os:openbsd': {
+       'CPPPATH' : [src_dir, '/usr/local/include'],
+@@ -365,7 +363,7 @@ MKSNAPSHOT_EXTRA_FLAGS = {
+       'LIBS': ['pthread'],
+     },
+     'os:freebsd': {
+-      'LIBS': ['execinfo', 'pthread']
++      'LIBS': ['pthread']
+     },
+     'os:solaris': {
+       'LIBS': ['m', 'pthread', 'socket', 'nsl', 'rt'],
+@@ -432,7 +430,7 @@ CCTEST_EXTRA_FLAGS = {
+       'LIBS':         ['pthread'],
+     },
+     'os:freebsd': {
+-      'LIBS':         ['execinfo', 'pthread']
++      'LIBS':         ['pthread']
+     },
+     'os:solaris': {
+       'LIBS':         ['m', 'pthread', 'socket', 'nsl', 'rt'],
+@@ -489,7 +487,7 @@ SAMPLE_FLAGS = {
+     },
+     'os:freebsd': {
+       'LIBPATH' :     ['/usr/local/lib'],
+-      'LIBS':         ['execinfo', 'pthread']
++      'LIBS':         ['pthread']
+     },
+     'os:solaris': {
+       # On Solaris, to get isinf, INFINITY, fpclassify and other macros one
+diff --git a/tools/gyp/v8.gyp b/tools/gyp/v8.gyp
+index eaac428..0ad1772 100644
+--- a/tools/gyp/v8.gyp
++++ b/tools/gyp/v8.gyp
+@@ -685,10 +685,6 @@
+               },
+             ],
+             ['OS=="freebsd"', {
+-                'link_settings': {
+-                  'libraries': [
+-                    '-L/usr/local/lib -lexecinfo',
+-                ]},
+                 'sources': [
+                   '../../src/platform-freebsd.cc',
+                   '../../src/platform-posix.cc'
