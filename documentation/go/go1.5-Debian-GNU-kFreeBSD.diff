diff --git a/misc/cgo/test/issue4029.go b/misc/cgo/test/issue4029.go
index b0385eb..742b0d9 100644
--- a/misc/cgo/test/issue4029.go
+++ b/misc/cgo/test/issue4029.go
@@ -8,7 +8,7 @@ package cgotest
 
 /*
 #include <dlfcn.h>
-#cgo linux LDFLAGS: -ldl
+#cgo freebsd LDFLAGS: -ldl
 */
 import "C"
 
diff --git a/src/cmd/dist/test.go b/src/cmd/dist/test.go
index d0e6346..dc7de21 100755
--- a/src/cmd/dist/test.go
+++ b/src/cmd/dist/test.go
@@ -798,10 +798,10 @@ func (t *tester) hasBash() bool {
 }
 
 func (t *tester) raceDetectorSupported() bool {
-	switch t.gohostos {
-	case "linux", "darwin", "freebsd", "windows":
-		return t.cgoEnabled && t.goarch == "amd64" && t.gohostos == t.goos
-	}
+	//switch t.gohostos {
+	//case "linux", "darwin", "freebsd", "windows":
+	//	return t.cgoEnabled && t.goarch == "amd64" && t.gohostos == t.goos
+	//}
 	return false
 }
 
diff --git a/src/cmd/go/go_test.go b/src/cmd/go/go_test.go
index 5fac059..88cc434 100644
--- a/src/cmd/go/go_test.go
+++ b/src/cmd/go/go_test.go
@@ -79,10 +79,10 @@ func TestMain(m *testing.M) {
 			}
 		}
 
-		switch runtime.GOOS {
-		case "linux", "darwin", "freebsd", "windows":
-			canRace = canCgo && runtime.GOARCH == "amd64"
-		}
+		//switch runtime.GOOS {
+		//case "linux", "darwin", "freebsd", "windows":
+		//	canRace = canCgo && runtime.GOARCH == "amd64"
+		//}
 	}
 
 	// Don't let these environment variables confuse the test.
@@ -2146,7 +2146,7 @@ func TestGoInstallPkgdir(t *testing.T) {
 
 func TestGoTestRaceInstallCgo(t *testing.T) {
 	switch sys := runtime.GOOS + "/" + runtime.GOARCH; sys {
-	case "darwin/amd64", "freebsd/amd64", "linux/amd64", "windows/amd64":
+	case "darwin/amd64", "linux/amd64", "windows/amd64":
 		// ok
 	default:
 		t.Skip("no race detector on %s", sys)
diff --git a/src/make.bash b/src/make.bash
index f17648a..b12f897 100755
--- a/src/make.bash
+++ b/src/make.bash
@@ -101,7 +101,7 @@ done
 # cmd/dist will detect kFreeBSD as freebsd/$GOARCH, but we need to
 # disable cgo manually.
 if [ "$(uname -s)" == "GNU/kFreeBSD" ]; then
-        export CGO_ENABLED=0
+        export CGO_ENABLED=1
 fi
 
 # Clean old generated file that will cause problems in the build.
diff --git a/src/net/cgo_resold.go b/src/net/cgo_resold.go
index abd04a8..6ba62c1 100644
--- a/src/net/cgo_resold.go
+++ b/src/net/cgo_resold.go
@@ -18,6 +18,6 @@ import "C"
 import "unsafe"
 
 func cgoNameinfoPTR(b []byte, sa *C.struct_sockaddr, salen C.socklen_t) (int, error) {
-	gerrno, err := C.getnameinfo(sa, salen, (*C.char)(unsafe.Pointer(&b[0])), C.size_t(len(b)), nil, 0, C.NI_NAMEREQD)
+	gerrno, err := C.getnameinfo(sa, salen, (*C.char)(unsafe.Pointer(&b[0])), C.socklen_t(len(b)), nil, 0, C.NI_NAMEREQD)
 	return int(gerrno), err
 }
